* TODO
** design
*** library
**** easy
- separate core from lib - should be only dependency for a frontend
- auxilliary info should be presented in separate windows - no 'overlays'
- clipboard support
- support for image dumping to reduce startup time and resume work (check on startup)
***** buffers
- collapse piece table binary tree on idle
- iteration API
- flexichain backend
**** tbd
- be able to take advantage of GUI capabilities in frontend
- default regex syntax highlighting impl. - avoid C dependencies
- incremental parsing - access to syntax tree via tree-sitter
***** plugin parallelism
- parallel writes are disallowed as edits based on outdated analysis will cause undesirable changes (regardless of consistency guarantees)
****** concurrent buffer reads
- support for concurrent reads (e.g. regex searches, static analysis)
- one writer (event loop thread) many readers
***** async
- edits should not block
- timers - support in event loop
***** literate programming support (don't tie language parsing/analysis to whole buffer)
- let plugins do asynchronous analysis of selection as vvv
***** ability to attach information to text ranges per buffer
- Must not be window specific
- probably built on some 'selection' mechanism built on marks
- Must be automatically updated on edits
*** frontend
**** terminal frontend needs to support special keys better - refer to libtermkey
- [CM]-arrow
- pagedown/up
- delete key
*** delivery
- sources are compiled and dumped as core image during installation
- lisp is a dependency - don't dump huge executable
- (sb-ext:disable-debugger)
